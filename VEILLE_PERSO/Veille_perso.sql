
--MODIF 08/02 : on arrete de tronquer la table pour garder un historique
--TRUNCATE TABLE ARTICLES_TI_VEILLE_PERSO;
-- a la place on efface les contenus qui ont plus de 4 semaines
DELETE FROM ARTICLES_TI_VEILLE_PERSO WHERE DATE_CONTENU < GETDATE()-31;

-- AJOUT du 08/02 
-- on met à jour les contenus existants avec CONTENUS_A_ENVOYER = 0 pour dire qu'ils ne devront pas être envoyés
UPDATE ARTICLES_TI_VEILLE_PERSO
SET CONTENUS_A_ENVOYER = 0 
WHERE CONTENUS_A_ENVOYER=1;

--  SELECTION contenu ACTU
INSERT INTO ARTICLES_TI_VEILLE_PERSO (TITRE,LIEN,MAIL_CODE,CONTENU,ACTU_INFOCOLL,IMAGE,TYPE_ARTICLE,TYPE_CONTENU,DATE_CONTENU,ID_ARTICLE,ID_SELLIGENT_CONTENU,CONTENUS_A_ENVOYER)
SELECT DISTINCT
	ARTICLES_TI_CONTENU_EDITO.TITRE,
	ARTICLES_TI_CONTENU_EDITO.LIEN,
	DATA_TI_THESAURUS_USERS.MAIL_CODE AS MAIL_CODE,
	CONTENU,
	0 AS ACTU_INFOCOLL,
	ARTICLES_TI_CONTENU_EDITO.IMAGE,
	ARTICLES_TI_CONTENU_EDITO.TYPE_ARTICLE,
	ARTICLES_TI_CONTENU_EDITO.TYPE_CONTENU,
	ARTICLES_TI_CONTENU_EDITO.DATE_CONTENU,
	ARTICLES_TI_CONTENU_EDITO.ID_ARTICLE,
	(SELECT MAX(ID) FROM ARTICLES_TI_CONTENU_EDITO T1 WHERE T1.ID_ARTICLE = ARTICLES_TI_CONTENU_EDITO.ID_ARTICLE),
	1
FROM ARTICLES_TI_CONTENU_EDITO
LEFT JOIN DATA_TI_THESAURUS_CONTENU ON ARTICLES_TI_CONTENU_EDITO.ID = DATA_TI_THESAURUS_CONTENU.ID_ARTICLE_SELLIGENT AND ORIGIN_ARTICLE=1
LEFT JOIN DATA_TI_THESAURUS_USERS ON DATA_TI_THESAURUS_USERS.TAG_ID = DATA_TI_THESAURUS_CONTENU.TAG_ID
WHERE DATA_TI_THESAURUS_USERS.TAG_ID is nOT NULL
AND ARTICLES_TI_CONTENU_EDITO.STATUT = 2
AND ARTICLES_TI_CONTENU_EDITO.DATE_CONTENU > GETDATE()-8;

-- mise à jour des tags dans les articles EDITO ACTU
UPDATE ARTICLES_TI_VEILLE_PERSO
SET TAGS = STUFF((SELECT DISTINCT ' ' + CONCAT('<span style="background-color:#e2e1e1;margin:0 10px 10px 0;display:inline-block;font-size:13px;letter-spacing:0.75px;font-family:Arial,sans-serif;color:#4d5356;border-top: 5px solid #e2e1e1;border-left: 10px solid #e2e1e1;border-bottom: 5px solid #e2e1e1;border-right: 10px solid #e2e1e1;">',t3.TAG_LABEL,'</span>')
         from DATA_TI_THESAURUS_CONTENU t2
	INNER JOIN DATA_TI_THESAURUS t3 ON t2.TAG_ID = t3.TAG_ID AND ORIGIN_ARTICLE=1
	INNER JOIN DATA_TI_THESAURUS_USERS ON DATA_TI_THESAURUS_USERS.MAIL_CODE=ARTICLES_TI_VEILLE_PERSO.MAIL_CODE AND t3.TAG_ID = DATA_TI_THESAURUS_USERS.TAG_ID
         where t2.ID_ARTICLE_SELLIGENT = ID_SELLIGENT_CONTENU
            FOR XML PATH(''), TYPE).value('(./text())[1]','varchar(max)'), 1, LEN(','), '')
WHERE ACTU_INFOCOLL=0 AND TAGS IS NULL;


--------------------------------------------------------------------------------------
	  -- SELECTIOn des INFOCOLL
INSERT INTO ARTICLES_TI_VEILLE_PERSO (TITRE,LIEN,MAIL_CODE,CONTENU,ACTU_INFOCOLL,ID_SELLIGENT_CONTENU,DATE_CONTENU,ID_ARTICLE,AUTEUR,PDF_PRESENT,CONTENUS_A_ENVOYER)
SELECT DISTINCT
	ARTICLES_TI_CONTENU_INFOCOLL.TITRE,
	ARTICLES_TI_CONTENU_INFOCOLL.LIEN,
	DATA_TI_THESAURUS_USERS.MAIL_CODE AS MAIL_CODE,
	CONTENU,
	1 AS ACTU_INFOCOLL,
	(SELECT MAX(ID) FROM ARTICLES_TI_CONTENU_INFOCOLL T1 WHERE T1.ID_ARTICLE = ARTICLES_TI_CONTENU_INFOCOLL.ID_ARTICLE) AS ID_ARTICLE_SELLIGENT,
	ARTICLES_TI_CONTENU_INFOCOLL.DATE_CONTENU,
	ARTICLES_TI_CONTENU_INFOCOLL.ID_ARTICLE,
	ARTICLES_TI_CONTENU_INFOCOLL.AUTEUR,
	ARTICLES_TI_CONTENU_INFOCOLL.PDF_PRESENT,
	1
FROM ARTICLES_TI_CONTENU_INFOCOLL
LEFT JOIN DATA_TI_THESAURUS_CONTENU ON ARTICLES_TI_CONTENU_INFOCOLL.ID = DATA_TI_THESAURUS_CONTENU.ID_ARTICLE_SELLIGENT AND ORIGIN_ARTICLE=0
LEFT JOIN DATA_TI_THESAURUS_USERS ON DATA_TI_THESAURUS_USERS.TAG_ID = DATA_TI_THESAURUS_CONTENU.TAG_ID
WHERE DATA_TI_THESAURUS_USERS.TAG_ID is nOT NULL
AND ARTICLES_TI_CONTENU_INFOCOLL.STATUT IN (3,4)
AND ARTICLES_TI_CONTENU_INFOCOLL.DATE_CONTENU > GETDATE()-8;


-- mise à jour des tags dans les articles INFOCOLL
UPDATE ARTICLES_TI_VEILLE_PERSO
SET TAGS = STUFF((SELECT DISTINCT ' ' + CONCAT('<span style="background-color:#e2e1e1;margin:0 10px 10px 0;display:inline-block;font-size:13px;letter-spacing:0.75px;font-family:Arial,sans-serif;color:#4d5356;border-top: 5px solid #e2e1e1;border-left: 10px solid #e2e1e1;border-bottom: 5px solid #e2e1e1;border-right: 10px solid #e2e1e1;">',t3.TAG_LABEL,'</span>')
         from DATA_TI_THESAURUS_CONTENU t2
	INNER JOIN DATA_TI_THESAURUS t3 ON t2.TAG_ID = t3.TAG_ID AND ORIGIN_ARTICLE=0
	INNER JOIN DATA_TI_THESAURUS_USERS ON DATA_TI_THESAURUS_USERS.MAIL_CODE=ARTICLES_TI_VEILLE_PERSO.MAIL_CODE AND t3.TAG_ID = DATA_TI_THESAURUS_USERS.TAG_ID
         where t2.ID_ARTICLE_SELLIGENT = ID_SELLIGENT_CONTENU
            FOR XML PATH(''), TYPE).value('(./text())[1]','varchar(max)'), 1, LEN(','), '')
WHERE ACTU_INFOCOLL=1 AND TAGS IS NULL;



--MODIF 08/02 : on arrete de tronquer la table pour garder un historique
--TRUNCATE TABLE ARTICLES_TI_VEILLE_PERSO_TAGS;
-- a la place on efface les contenus qui ont plus de 4 semaines
DELETE FROM ARTICLES_TI_VEILLE_PERSO_TAGS WHERE DATE_CONTENU < GETDATE()-31;

-- AJOUT du 08/02 
-- on met à jour les contenus existants avec CONTENUS_A_ENVOYER = 0 pour dire qu'ils ne devront pas être envoyés
UPDATE ARTICLES_TI_VEILLE_PERSO_TAGS
SET CONTENUS_A_ENVOYER = 0 
WHERE CONTENUS_A_ENVOYER=1;

-- SELECTION de la liste des mots clés par utilisateur

INSERT INTO ARTICLES_TI_VEILLE_PERSO_TAGS (MAIL_CODE,DATE_CONTENU,CONTENUS_A_ENVOYER)
SELECT DISTINCT MAIL_CODE,GETDATE(),1 FROM ARTICLES_TI_VEILLE_PERSO
WHERE ARTICLES_TI_VEILLE_PERSO.DATE_CONTENU > GETDATE()-8;

UPDATE ARTICLES_TI_VEILLE_PERSO_TAGS
SET TAG_LABEL = STUFF((SELECT DISTINCT ' ' + CONCAT('<span style="background-color:#e2e1e1;margin:0 10px 10px 0;display:inline-block;font-size:13px;letter-spacing:0.75px;font-family:Arial,sans-serif;color:#4d5356;border-top: 5px solid #e2e1e1;border-left: 10px solid #e2e1e1;border-bottom: 5px solid #e2e1e1;border-right: 10px solid #e2e1e1;">',DATA_TI_THESAURUS.TAG_LABEL,'</span>')
FROM ARTICLES_TI_VEILLE_PERSO 
INNER JOIN DATA_TI_THESAURUS_CONTENU ON ARTICLES_TI_VEILLE_PERSO.ID_SELLIGENT_CONTENU = DATA_TI_THESAURUS_CONTENU.ID_ARTICLE_SELLIGENT 
	AND DATA_TI_THESAURUS_CONTENU.ORIGIN_ARTICLE = CASE ARTICLES_TI_VEILLE_PERSO.ACTU_INFOCOLL
								WHEN 0 THEN 1
								ELSE 0
							END
INNER JOIN DATA_TI_THESAURUS_USERS ON DATA_TI_THESAURUS_USERS.MAIL_CODE = ARTICLES_TI_VEILLE_PERSO_TAGS.MAIL_CODE AND DATA_TI_THESAURUS_USERS.TAG_ID = DATA_TI_THESAURUS_CONTENU.TAG_ID
INNER JOIN DATA_TI_THESAURUS ON DATA_TI_THESAURUS_CONTENU.TAG_ID = DATA_TI_THESAURUS.TAG_ID AND DATA_TI_THESAURUS_USERS.TAG_ID = DATA_TI_THESAURUS.TAG_ID
WHERE ARTICLES_TI_VEILLE_PERSO.DATE_CONTENU > GETDATE()-8

            FOR XML PATH(''), TYPE).value('(./text())[1]','varchar(max)'), 1, LEN(','), '');

--- MIse à jour du mois en cours 
UPDATE  ENVIRONMENT_VARIABLES
SET VALUE = (SELECT 
CASE MONTH(GETDATE())
	WHEN 1 THEN 'janvier'
	WHEN 2 THEN 'février'
	WHEN 3 THEN 'mars'
	WHEN 4 THEN 'avril'
	WHEN 5 THEN 'mai'
	WHEN 6 THEN 'juin'
	WHEN 7 THEN 'juillet'
	WHEN 8 THEN 'aout'
	WHEN 9 THEN 'septembre'
	WHEN 10 THEN 'octobre'
	WHEN 11 THEN 'novembre'
	WHEN 12 THEN 'décembre'
END AS [Mois_En_Cours])
WHERE NAME='SYSTEM.ENV_MOIS_FR';


-- insertion du prochain trigger d'envoi à une heure après le traitement
INSERT INTO CAMPAIGNTRIGGERFLAGS (CAMPAIGNID,START_DT,ENABLED,REQCONFIRM,STATE)
VALUES (2845,DATEADD(HOUR,1,GETDATE()),1,0,0);

-- purge des triggers programmés qui ont plus de 3 mois
DELETE FROM CAMPAIGNTRIGGERFLAGS WHERE START_DT < GETDATE()-90;
